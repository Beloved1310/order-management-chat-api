generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  REGULAR
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  password    String
  createdAt   DateTime @default(now())
  orders      Order[]
  messages    Message[]

  role        Role @default(REGULAR)  // 'Admin' or 'Regular'
}

model Order {
  id            Int       @id @default(autoincrement())
  description   String
  specifications String
  quantity      Int
  metadata      Json
  userId        Int
  user          User      @relation(fields: [userId], references: [id])
  chatRoom      ChatRoom?
  chatRoomId    Int?      // Nullable because the chat room may not be created immediately
  status        String    @default("Review") // 'Review', 'Processing', 'Completed'
  createdAt     DateTime  @default(now())

  @@index([userId])          
  @@index([status])         
  @@index([createdAt])       
}

model ChatRoom {
  id            Int       @id @default(autoincrement())
  orderId       Int       @unique
  order         Order     @relation(fields: [orderId], references: [id])
  messages      Message[]
  closed        Boolean   @default(false)
  summary       String?   

  @@index([orderId])        
  @@index([closed])        
}

model Message {
  id            Int       @id @default(autoincrement())
  chatRoomId    Int
  chatRoom      ChatRoom  @relation(fields: [chatRoomId], references: [id])
  senderId      Int
  sender        User      @relation(fields: [senderId], references: [id])
  content       String
  createdAt     DateTime  @default(now())

  @@index([chatRoomId])     
  @@index([senderId])       
  @@index([createdAt])      
}
